#################################################################
       UNIX用  デスクトップマスコット プログラム                 
       macopix : Mascot Constructive Pilot for X                 
                                                    ver 3.4.0    
                     日本語ドキュメント : README.jp		 
                                                                 
                            2019.12.28  Kurumi Chimari           
                            chimari@rosegray.sakura.ne.jp        
                            http://rosegray.sakura.ne.jp/        
#################################################################

=============================================================
                      ■ 目次 ■
  - このプログラムについて
  - 動作環境
  - インストール
  - 実際に動かしてみる
  - 作成されるファイル・必要なファイル
  - マスコットについて
  - ランチャメニューについて
  - Biff機能について
  - 時報機能
  - ソケットメッセージ機能について
  - デュエットアニメについて
  - 日本語EUC以外のロケールでの動作
  - SSLのサポートについて
  - 半透明のサポートについて
  - TO DO
  - 著作権的話とか
=============================================================


▼このプログラムについて
  MaCoPiXはUNIX/X Window SystemまたはMicrosoft Windowsで動作するデスクトップ
  マスコットプログラムで、GNU GPL3にしたがって配布されているフリーソフトウェ
  アです。

  特にことわりのない限りはこのドキュメントはUNIX版についての解説を記述します。
  Windows版については、アーカイブ内の"Readme-win32.jp"ファイルをご覧ください。


  MacoPiXはおすわりマスコットアプリであるActX(Activate X WindowSystem)の発展系
  になります。

  現段階で作成できるマスコットは
         ・フォーカス追従型 (ActX like)
         ・位置固定型 (そのままデスクトップにはりつけるマスコット)
  の二種類です。
  また、それぞれに対してデジタル時計の有無を指定できるため、時計型アクセサリ
  としても使用できるかと思います。(時計の機能はまだ貧弱ですが……)
  さらにBiff機能(POP3/APOP/local spool/Maildir)も持ち合わせています。

  とりあえず、マスコットの作成からプロファイルの各種変更にいたるまで、ユーザー
  レベルでテキストファイルに直接触らずともメニューからGUIですべて変更できるように
  考えています。


  なお、ActXとのファイル互換性はありませんのでご注意下さい。


▼動作環境
  以下の環境で動作します。
      - X Window Systemが動作するUNIX環境
      - Microsoft Windows (7以降, 10推奨)
      - macOS : OS X 10.9 (Mavericks) 以降、 64bit only

   [for UNIX]
     ・Gtk+3 (3.22以降) もしくはGtk+2 (2.24以降) およびそれに付随する gdk-pixbuf, cairo
     ・gettext 0.10以降
     ・gdk-pixbufがサポートするすべての画像形式を読み込むことができま
      すが、それには各画像形式に対応したlibrary(libtiff, libpng等)が必要と
      なります(作者のMaCoPiXマスコットはPNGで提供されています)。
     ・openssl もしくは gnutls

   [for Microsoft Windows (バイナリ配布)]
     ・Windows7以降 (10 [64-bit] 推奨)
     ・TAR64.DLL もしくは TAR32.DLL (GPL)を同梱
        ※参照「統合アーカイバプロジェクト」
            URL  http://www.csdinc.co.jp/archiver/
     ・mysy2上のGtk+3 でコンパイルしています。
     ・socket messageには対応していません。
     ・他Gtk+等の必要なライブラリもバイナリ配布版にすべて含まれています。

   [for macOS (バイナリ配布)]
     ・10.9 (Mavericks) 以降
     ・64bitのみ
     ・Homebrew のGtk+3 でコンパイルしています。
     ・他Gtk+等の必要なライブラリもバイナリ配布版にすべて含まれています。

▼インストール (UNIX版/sourceから)
  1. sourceを展開し、できたディレクトリに移動
  2. ./configure 
       ##################################################################
        ./configure のオプション
         [Gtk+] (デフォルトはGtk+3)
           ./configure --with-gtk2      (Gtk+2を利用する場合)
         [SSL] (デフォルトはOpenSSL)
           ./configure --withe-gnutls   (GNUTLSをOpenSSLのかわりに使う場合)
           ./configure --disable-ssl    (SSLを使わない場合)
         [Win32]  (デフォルトはfor UNIX)
           ./configure --with-win32    (Win32用にmakeする場合)
	                               (macOS はdarwin環境か否かを自動判別)
         [TAR32]  (デフォルトはオフ)
           ./configure --with-tar64    (TAR64.DLLを使う場合, for 64bit)
           ./configure --with-tar32    (TAR32.DLLを使う場合, for 32bit)
         [UNLHA32]  (デフォルトはオフ)
           ./configure --with-unlha32  (UNLHA32.DLLを使う場合, for 32bit)
       ##################################################################
         ※ Win32版は ./configure --with-win32 --with-tar64(or 32) で作製しています。
  3. make
  4. su
  5. make install
   (gettextによるメニューの多国語対応……といっても日本語だけですが……
    を利用するためには suになって make installする必要があります)




▼実際に動かしてみる
  マスコットファイルがないと意味がありません。
  
         % macopix

　でMaCoPiXを起動すると、マスコットファイルがない場合は起動メニューの中で
  公式ページからマスコットをダウンロードするボタンが現れます。
  このボタンを押すとHTTP経由で現在の公式マスコットのリストを取得しますので、
  そこからお好きなものをひとつ選んでダウンロードしてみてください。
  また、マスコットアーカイブ(*.tar.gz)をどこか(公式ページからも直接ダウンロード
  できます)から手にいれたのちにmacopixを起動し、GUIにしたがってマスコットの
  インストールを行うこともできます。

  一度起動してしまえば、マスコットの変更等はポップアップメニューから随時できます。
  またマスコットは随時追加することができます。

  オプション等はまだまだ変更の余地がありますが -h オプションで見ることができます。



▼作成されるファイル・必要なファイル
  MaCoPiXは実行ファイル以外に
    a. マスコットファイル(拡張子 .mcpx)
            ……とそれに付随する画像ファイル・音声ファイル
    b. リソースファイル(拡張子 .rc)
    c. ランチャメニュー用ファイル(拡張子 .menu)
  の各ファイルを使用・または作成します。

  基本的にはユーザーディレクトリ(HOME$/.macopix/)の下にコピーまたは作成され
  る仕組みになっています。



  a.については後述の「マスコットについて」の項を参照してください。
  
  b.は、マスコットをメニュー等から変更しても保存されるパラメータを記述してい
  るファイルです。
  特に指定しない場合は、デフォルトの macopix.rc が読み込まれます。
  これ以外のファイルを指定する場合は起動時の -r オプションを使います。

  c.は、よく使うマスコットファイルを登録しておくためのランチャメニューの内容
  を記述したファイルです。
  後述の「ランチャメニューについて」の項を参照してください。
           


▼マスコットについて
  マスコットはActXと似たような感じで
     ・マスコットファイル (*.mcpx)
     ・イメージファイル (gdk-pixbufで読み込むため形式は問いません)
  から成り立ちます。
  もちろんalpha値でマスクを指定できるような画像形式(png,gif,xpm等)を使えば、
  非矩形のマスコットを表示することも可能です。


  起動時にはコマンドラインオプションとしてマスコットファイルを指定できますが、
  その際には
      1. カレントからの相対、もしくは絶対パス
      2. User Directory ($HOME/.macopixrc/) 
                        (Win版では macopix.exeのある場所の UserData\)
      3. Common Directory (/usr/share/macopix/ etc.)
                          (Win版はなし)
  の順番でマスコットファイルをサーチします。
  2のユーザーディレクトリは初回起動時に勝手に作成されます。
  3についてはmake時に設定されます。

  また、イメージに関してはマスコットファイル中でファイル名を指定します
  が、これも
      1. マスコットファイルと同じディレクトリ
      2. User Pixmap Directory ($HOME/.macopixrc/pixmap/)
                               (Win版は UserData\pixmap\)
      3. Common Pixmap Directory (/usr/share/macopix/pixmap/ ?)
                                 (Win版はなし)
  を自動的にサーチしてロードします。

  また、自動インストールを指定していると、マスコットをロードした際に自動的に
  ユーザーディレクトリにマスコットをインストールします。
  起動時に -O (--over-write) オプションを使用した場合は、1>3>2の優先順位に
  なります。(rpm を使用した場合は、3のディレクトリにマスコットがインストール
  されますので、それを2に上書きするためです。)


  マスコットを使用する点で注意が必要なのは、マスコットで使用している文字コード
  を表示できるフォントを指定している必要があるということです。
  また、メニュー内のマスコット名等もUTF8に変換はされていますが、公式マスコット
  などは日本語localeで配布されていますので日本語表示ができない環境では
  正しい表示がされません。
  その他の環境の方は、マスコットファイルをそれぞれの環境へ翻訳していただけれ
  ば、ふきだしの表示等も可能です。
  また、各localeに対応した po/ ディレクトリ以下の gettextのメッセージファイル
  を作成していただければ、各ダイアログも多国語化ができますので、そのような
  ファイルを作成した場合は作者までご連絡下さい。



▼ランチャメニューについて
  ポップアップメニューの「マスコットランチャ」の部分によく使うマスコットを
  登録しておき簡単に変更できるようにする機能です。 
  これを使用するためには、ランチャメニュー用ファイル(*.menu)を用意する必要が
  あります。
  メニュー用ファイルについては随時ポップアップメニューからの読み込み・新規
  作成が可能です。また、設定ダイアログ中での編集も自由にできます。

  ActXのメニュー機能と違う点は、メニューが「カテゴリー」→「マスコット」と
  いう二層構造となっている点です。
  各マスコットは「カテゴリー」(たとえばゲーム別など)別に登録されなくては
  なりません。

  また、各リソースファイルには一つデフォルトのメニューファイルを指定できます。
  もし、起動時にマスコットファイルが明記去れていない場合は、デフォルトの
  メニューファイルに登録されているマスコットからランダムにマスコットを選択
  して表示します。
  さらにデフォルトメニューが定義されていない場合でメニューがインストールされ
  ている環境では、起動時にメニュー選択ダイアログがあらわれて起動メニュー
  (マスコットはメニューからランダムに選択)を指定することができます。

  起動時にメニューファイルを指定するには -m オプションを使用します。



▼Biff機能について
  ※現在作者環境でチェックしているのはPOP3 (w/ or w/o SSL)のみです。

  メール着信チェックを
     1. local spool (UNIX mbox形式 : /var/spool/mail/$USER 等)
     2. POP3 (SSL/TLS)
     3. POP3 (APOP認証) (SSL/TLS)
     4. qmail (Maildir形式)
     5. MH + Procmail
  について行うことができます。
  適切な設定をしたのちに、-b オプションで起動、またはポップアップメニュー
  上での設定にて使用することができます。
  POPを使用している場合はパスワード等がリソースファイルに平文で書かれます
  のでご注意下さい。
  (基本的にリソースファイルのパーミッションは600……ユーザーのみ閲覧・編集
   可……となっています)
 
  - POP3/APOPをご利用の場合
    GUI「サーバー情報」にて"アドレス", "ユーザーID", "パスワード",
    "POP3ポート番号"(通常は変更しなくてよい)をGUIで設定してください。 
    "ファイル"を設定する必要はありません。
    またver1.6.2から試験的にPOP over SSL (SSL/TLS)に対応しています。

  - qmail (Maildir形式)をご利用の場合
    GUI「サーバー情報」にて"ファイル"部分にMaildirディレクトリの新着メイル
    が格納されるディレクトリを指定してください。
    (通常は $HOME/Maildir/new )

  - MH + Procmail
    GUI「サーバー情報」にて"ファイル"部分にprocmailのログファイル
    (通常 $HOME/.procmailrc 中でLOGFILE=で指定される)[procmail.log]を
    フルパスで指定してください。
    また、MHのMail格納ディレクトリは $HOME/.procmailrc 中で "MAILDIR="にて
    指定されているディレクトリ ＞ $HOME/Mail の優先順位で自動設定されます。
    fetchmailなどを使った定期的なポーリングをメールサーバーにたいして
    行いたいときは、GUIの"動作に関する情報"のなかの"ポーリング"にそのときの
    コマンドラインを指定してください。


▼時報機能
  毎正時(00分になったとき)に任意のコマンドを実行したり、マスコットの変更を
  したりすることができます。
  適切な設定をしたのちに、-s オプションで起動、またはポップアップメニュー上
  での設定にて使用することができます。
  設定についてはリソースファイルに書き込まれます。
  マスコットの変更はメニューファイルが指定されている状態でなければ実行され
  ませんのでご注意下さい。


▼ソケットメッセージ機能について
  起動中のマスコットに任意のふきだしメッセージを外部から表示させる機能です。
   1. まず、MaCoPiXを --sockmsg オプション付きで起動する。
      このオプション付きで起動できるMaCoPiXはひとつのみです。

   2. コマンドラインから
       macopix --message "ごきげんよう"
      と実行すると --message オプションであたえた文字列がふきだしに表示され
      ます。
      ふきだしの制御文字(%c,%a,%p,%n)も使用できます。
      文字コードは各localeにあわせてください。

   3. ソケットメッセージの消滅までの時間をメッセージごとに変えたい場合は
       macopix --message "ごきげんよう" --message-expire 5000
      のように --message-expire オプションで表示時間を直接指定(単位は[ms])
      できます。
      また、このオプションを省略したときに使われるデフォルトの値をかえたい
      場合はGUIから変更できます。　

   4. ソケットメッセージのふきだしでは、制御文字を記述しなくても、ふきだしの
      文字をタイピングのように一文字ずつ順に表示していくことができます
      (ステップ表示)。
      通常の一括表示とステップ表示のどちらを使うか、また、ステップ表示の間隔
      (フレーム数)についてはGUIからデフォルトを設定できます。



▼デュエットアニメ機能について  (UNIX 版のみ)
   ソケットによるパイプアクセスを利用したマスコット間通信によってマスコット
   のクリック/ランダムアニメを連動させる機能です。 
   たとえばマリみての祥子さまと祐巳を同時に起動しておいて、どちらかをつっつ
   いてみると……というかんじです。 
    - 各マスコットは起動時に /tmp/macopix-(userID)/macopix-(mascot file)
      というパイプを作成します。アプリを通常終了させなかった場合などはパイプ
      ファイル自体は残りますが、次の起動時などには影響しません。 
    - ごくまれにソケットメッセージ用のパイプファイル
         /tmp/macopix-(userID)/macopix
      が残っている状態で macopix --sockmsg での起動に失敗することがあるよう
      です。
      そのような場合は上記のファイルを削除してmacopixを起動しなおしてください。
    - 同じマスコットが複数起動したときは「後勝ち」となります。
      ただし、先に起動していたマスコットを変更or終了したときにもパイプが閉じ
      られます(現在のところの仕様)。 
    - 機能を使うためにはあらかじめマスコットのアニメパターン設定に対象マス
      コットファイル、相手のアニメパターン、相手のアクションまでの遅延フレー
      ム数、相手にしゃべらせたいふきだしメッセージを指定しておきます。


▼日本語EUC以外のロケールでの動作
  作者提供のMaCoPiX用マスコットは日本語EUCで記述されています。
　localeは
          1. mcpxファイル内の　[General] code=xxxx 設定
          2. 現在のlocale
          3. MaCoPiX デフォルト (EUC-JP)
  という優先順位でコードを理解しますので、UTF-8で日本語の表示できるフォント
  を指定している限りは標準のマスコットでの日本語表示はどのlocaleでも問題ない
  と思われます。
  ただし、これはあくまでも日本語環境どうしでの変換なので、他国語で使用したい
  場合はマスコット/メニューファイルの翻訳作業が必要になります。 

  また、日本語化されたメニュー等はgettextが適宜変換してくれるようで、特に
  変更は必要ないはずです。 



▼SSLのサポートについて
  本プログラムではBiff機能においてPOP over SSLをサポートするためにOpenSSL
  もしくはGNUTLSにリンクして(またはこれらとはリンクせずに)コンパイルすること
  ができます。

  OpenSSLは非GPLのソフトウェアであり、それとリンクするために下記のGPLへの
  例外適応が必要となります。これが気になる場合はGNUTLSを使用してください。

  これらの切替は ./configure時のオプションで選択できます。
    - OpenSSL (デフォルト)
    - GNUTLS  (./configure --with-gnutls)
    - SSLを使わない  (./configure --disable-ssl)
  なお、--with-gnutlsを指定しても、必要条件を満たさない場合はOpenSSLが使用
  されますのでご注意ください。


▼半透明のサポートについて
  コンポジット型のウインドウマネージャを使用している場合(2019年現在では
  ほとんどがそれに該当すると思います)、ふきだし・パネル時計を半透明表示する
  機能をサポートしています。
  逆にコンポジット非対応の環境では非矩形ウインドウの切り出し等を省いている
  箇所があり、正常な表示ができません。
  ※2019年現在ではそのような環境がどれだけあるのか、あまり把握していませんので、
    どうしても、という場合は対応しますのでご連絡ください。



▼著作権的話とか
   The code in this distribution is Copyright 2002 by Kurumi Chimari.

   このプログラムはフリーソフトウェアです。あなたはこれを、 Free Software　
   Foundation によって発行されたGNU一般公衆利用許諾書 (バージョン3、
   または(任意に)それ以降のバージョンのどちらか)の定める条件に従って、
   これを再配布、そして(あるいは)修正することができます。

   このプログラムは有用であることを願って配布されますが、*全くの無保証*です。
   *商業可能性の保証*や*特定の目的への適合性*は、言外に示されたものも含め
   全く存在しません。詳しくはGNU一般公衆利用許諾書をご覧ください。

   あなたはこのプログラムとともにGNU一般公衆利用許諾書の複製を一部受け取った
   はずです。もし受け取っていなければ、Free Software Foundationまで請求
   してください(宛先は Free Software Foundation, Inc.,
   51 Franklin St., Fifth Floor, Boston, MA 02110-1301 USA)。

   加えて特別な例外として、K.ChimariはこのプログラムのコードをOpenSSLライブ
   ラリ(あるいはOpenSSLと同じライセンスが適用されたOpenSSLの改変された
   バージョン)とリンクし、リンクされた両者を含む結合著作物を頒布する許可を
   あたえます。
   あなたはOpenSSL以外で使われているすべてのコードに関しては全面的にGNU一般
   公衆利用許諾書に従わなければなりません。あなたがこのファイルを改変したな
   らば、あなたはこのバージョンのファイルに引き続き設けることもできますが、
   そうする義務はありません。もし例外を設けたくなければ、この例外条項をあな
   たのバージョンからは削除してください。
